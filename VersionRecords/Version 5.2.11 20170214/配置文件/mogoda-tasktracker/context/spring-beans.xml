<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.directwebremoting.org/schema/spring-dwr
		http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd
		http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd 
        http://www.springframework.org/schema/task    http://www.springframework.org/schema/task/spring-task-3.0.xsd ">

	<!-- 采用注释的方式配置bean -->
	<context:component-scan base-package="com.mogoroom">
		<context:exclude-filter type="regex" expression="com.mogoroom.repo.*" />
		<context:exclude-filter type="regex" expression="com.mogoroom.facade.repo.*" />
		<context:exclude-filter type="regex" expression="com.mogoroom.facade.impl.repo.*" />
		<context:exclude-filter type="regex" expression="com.mogoroom.facade.vo.repo.*" />
	</context:component-scan>

	<!-- tasktracker starter -->
	<bean id="taskTrackerStarter" class="com.mogoroom.tasktracker.TaskTrackerStarter">
		<property name="registryAddress" value="${sysconfig.lts.tasktracker.registryAddress}" />
		<property name="nodeGroup" value="${sysconfig.lts.tasktracker.nodeGroup}" />
		<property name="clusterName" value="${sysconfig.lts.tasktracker.clusterName}" />
		<property name="workThreads" value="${sysconfig.lts.tasktracker.workThreads}" />
		<property name="monitorUrl" value="${sysconfig.lts.tasktracker.monitorUrl}" />
		<property name="jobFailStore" value="${sysconfig.lts.tasktracker.jobFailStore}" />
	</bean>

	<!--proxy-target-class="true"强制使用cglib代理 如果为false则spring会自动选择 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 配置文件位置 -->
	<bean id="propertyConfig" class="com.mogoroom.tasktracker.SpringPropertyExt">
		<property name="locations">
			<list>
				<value>${confFilePath}</value>
			</list>
		</property>
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>	
	
	<!--定义数据源 BoneCP 连接池 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<!--定义数据源 DBCP 连接池 -->
			<bean class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
				<property name="driverClassName" value="${jdbc.driverClassName}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />

				<property name="initialSize" value="${jdbc.initialSize}" />
				<property name="maxTotal" value="${jdbc.maxTotal}" />
				<property name="maxWaitMillis" value="${jdbc.maxWaitMillis}" />
				<property name="maxIdle" value="${jdbc.maxIdle}" />
				<property name="minIdle" value="${jdbc.minIdle}" />
				<property name="removeAbandonedOnMaintenance" value="${jdbc.removeAbandonedOnMaintenance}" />
				<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
				<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
				<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}" />
				<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
				<property name="testOnReturn" value="${jdbc.testOnReturn}" />
				<property name="testWhileIdle" value="true" />
				<property name="validationQuery" value="select now() " />
				<property name="logAbandoned" value="true" />
			</bean>
		</property>
	</bean>
	
	<!--特殊报表db -->
	<bean id="dataSource_bl" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<!--定义数据源 DBCP 连接池 -->
			<bean class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
				<property name="driverClassName" value="${jdbc.driverClassName_bl}" />
				<property name="url" value="${jdbc.url_bl}" />
				<property name="username" value="${jdbc.username_bl}" />
				<property name="password" value="${jdbc.password_bl}" />

				<property name="initialSize" value="${jdbc.initialSize}" />
				<property name="maxTotal" value="${jdbc.maxTotal}" />
				<property name="maxWaitMillis" value="${jdbc.maxWaitMillis}" />
				<property name="maxIdle" value="${jdbc.maxIdle}" />
				<property name="minIdle" value="${jdbc.minIdle}" />
				<property name="removeAbandonedOnMaintenance" value="${jdbc.removeAbandonedOnMaintenance}" />
				<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
				<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
				<property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}" />
				<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
				<property name="testOnReturn" value="${jdbc.testOnReturn}" />
				<property name="testWhileIdle" value="true" />
				<property name="validationQuery" value="select now() " />
				<property name="logAbandoned" value="true" />
			</bean>
		</property>
	</bean>    

	<!-- 多数据源配置 -->
	<bean id="multipleDataSource" class="com.mogoroom.facade.system.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="dataSource" key="dataSource" />				
				<entry value-ref="dataSource_bl" key="ds_bl" />
			</map>
		</property>
		<!-- 默认使用原来的数据源 -->
		<property name="defaultTargetDataSource" ref="dataSource" />
	</bean>

	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		<property name="configLocation" value="classpath:context/mybatis.xml"></property>
		<property name="typeAliasesPackage"
			value="com.mogoroom.service.domain.city,com.mogoroom.service.domain.flat,com.mogoroom.service.domain.user,com.mogoroom.service.domain.orga" />
		<property name="mapperLocations" value="classpath*:com/mogoroom/service/*/dao/*Mapper.xml" />
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>


	<!-- 扫描 basePackage下所有的接口，根据对应的mapper.xml为其生成代理类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mogoroom.service.*.dao" />
	</bean>

	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 线程池 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" scope="singleton"
		lazy-init="true">

		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="${threadpool.corePoolSize}" />

		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="${threadpool.queueCapacity}" />

		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="${threadpool.maxPoolSize}" />

		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="${threadpool.keepAliveSeconds}" />
		<property name="rejectedExecutionHandler">
			<bean class="${threadpool.rejectedExecutionHandler}" />
		</property>
		<!--作用是修改线程的名字 -->
		<property name="threadNamePrefix" value="${threadpool.threadNamePrefix}" />
	</bean>

	<!-- 系统配置文件 -->
	<bean id="mogoSystem" class="com.mogoroom.util.BaseMogoSystem" factory-method="getInstance">
		<property name="environment" value="${sysconfig.environment}" />
		<property name="phoneNum" value="${sysconfig.phoneNum}" />
		<property name="emailNum" value="${sysconfig.emailNum}" />
		<property name="UPYUNSaveRootPath" value="${sysconfig.UPYUNSaveRootPath}" />
		<property name="nativeSaveRootPath" value="${sysconfig.nativeSaveRootPath}" />
		<property name="renterWeiJinAsynPath" value="${sysconfig.mogoRoot}" />
		<property name="partner_appkey" value="${sysconfig.partner_appkey}" />
		<property name="partner_masterSecret" value="${sysconfig.partner_masterSecret}" />
		<property name="renter_appkey" value="${sysconfig.renter_appkey}" />
		<property name="renter_masterSecret" value="${sysconfig.renter_masterSecret}" />

		<property name="contract_template" value="${sysconfig.contract.template}" />
		<property name="contract_contract" value="${sysconfig.contract.contract}" />
		<property name="contract_download" value="${sysconfig.contract.download}" />
		<property name="contract_mail" value="${sysconfig.contract.mail}" />
		<property name="mogo_primary_key" value="${sysconfig.zhima.mogo_primary_key}" />
		<property name="zhima_public_key" value="${sysconfig.zhima.zhima_public_key}" />
		<property name="zhima_appId" value="${sysconfig.zhima.zhima_appId}" />
		<property name="zhima_gatewayUrl" value="${sysconfig.zhima.zhima_gatewayUrl}" />
		<property name="zhima_apiVersion" value="${sysconfig.zhima.zhima_apiVersion}" />
		<property name="zhima_channel" value="${sysconfig.zhima.zhima_channel}" />
		<property name="zhima_platForm" value="${sysconfig.zhima.zhima_platForm}" />
		<property name="zhima_scene" value="${sysconfig.zhima.zhima_scene}" />
		<property name="zhima_queryScoreUrl" value="${sysconfig.zhima.zhima_queryScoreUrl}" />
		<property name="zhima_merchantId" value="${sysconfig.zhima.zhima_merchantId}" />
		<property name="zhima_score_productId" value="${sysconfig.zhima.zhima_score_productId}" />

		<property name="weixinhuoBanAppID" value="${sysconfig.weixin.weixinhuoBanAppID}" />
		<property name="weixinhuoBanAppSecret" value="${sysconfig.weixin.weixinhuoBanAppSecret}" />
		<property name="weixinhuobanReportTempId" value="${sysconfig.weixin.weixinhuobanReportTempId}" />
		<property name="da_restful_collect" value="${sysconfig.da_restful_collect}" />
		<property name="da_restful_analysis_saveResult" value="${sysconfig.da_restful_analysis_saveResult}" />
		<property name="da_restful_analysis_saveTag" value="${sysconfig.da_restful_analysis_saveTag}" />
		<property name="da_validtime_collect" value="${sysconfig.da_validtime_collect}" />
		<property name="da_validtime_analysis" value="${sysconfig.da_validtime_analysis}" />
	</bean>

	<!-- 获取spring容器，以访问容器中定义的其他bean，可在任何代码任何地方任何时候中取出ApplicaitonContext -->
	<bean id="springContext" class="com.mogoroom.util.MogoSpringContextUtil"></bean>

</beans>